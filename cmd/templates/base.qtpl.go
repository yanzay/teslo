// This file is automatically generated by qtc from "base.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line templates/base.qtpl:1
package templates

//line templates/base.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/base.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/base.qtpl:2
type Item struct {
	ID      string
	Content string
	Done    bool
}

//line templates/base.qtpl:9
func StreamHello(qw422016 *qt422016.Writer, items []*Item) {
	//line templates/base.qtpl:9
	qw422016.N().S(`
<html>
<head>
<title>Test title</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script>
window.addEventListener("load", function(evt) {
  var ws = new WebSocket("ws://localhost:8080/ws");
  ws.onopen = function(e) {
    console.log("OPEN");
  };
  ws.onclose = function(e) {
    console.log("CLOSE");
  };
  ws.onmessage = function(e) {
    var message = JSON.parse(e.data);
    var el = document.getElementById(message.id)
    el.outerHTML = message.content;
  };
  ws.onerror = function(e) {
    console.log("Error: ", e.data);
  };
  var app = document.getElementById("app")

  var clickHandler = function(e) {
    console.log(e.target.id);
    var parentIds = $(e.target).parents().map(function(i, el) {return el.id;}).toArray().filter(function(id) {return id !== ""});
    console.log(parentIds);
    if (e.target.id) {
      ws.send(JSON.stringify({event: "click", id: e.target.id, parents: parentIds}));
    }
  }
  app.addEventListener("click", clickHandler)
});
</script>
</head>
<body id="app">
    `)
	//line templates/base.qtpl:46
	StreamTodo(qw422016, items)
	//line templates/base.qtpl:46
	qw422016.N().S(`
</body>
</html>
`)
//line templates/base.qtpl:49
}

//line templates/base.qtpl:49
func WriteHello(qq422016 qtio422016.Writer, items []*Item) {
	//line templates/base.qtpl:49
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line templates/base.qtpl:49
	StreamHello(qw422016, items)
	//line templates/base.qtpl:49
	qt422016.ReleaseWriter(qw422016)
//line templates/base.qtpl:49
}

//line templates/base.qtpl:49
func Hello(items []*Item) string {
	//line templates/base.qtpl:49
	qb422016 := qt422016.AcquireByteBuffer()
	//line templates/base.qtpl:49
	WriteHello(qb422016, items)
	//line templates/base.qtpl:49
	qs422016 := string(qb422016.B)
	//line templates/base.qtpl:49
	qt422016.ReleaseByteBuffer(qb422016)
	//line templates/base.qtpl:49
	return qs422016
//line templates/base.qtpl:49
}

//line templates/base.qtpl:51
func StreamBody(qw422016 *qt422016.Writer, name string) {
	//line templates/base.qtpl:51
	qw422016.N().S(`
  <p>Hello, `)
	//line templates/base.qtpl:52
	qw422016.E().S(name)
	//line templates/base.qtpl:52
	qw422016.N().S(`!</p>
`)
//line templates/base.qtpl:53
}

//line templates/base.qtpl:53
func WriteBody(qq422016 qtio422016.Writer, name string) {
	//line templates/base.qtpl:53
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line templates/base.qtpl:53
	StreamBody(qw422016, name)
	//line templates/base.qtpl:53
	qt422016.ReleaseWriter(qw422016)
//line templates/base.qtpl:53
}

//line templates/base.qtpl:53
func Body(name string) string {
	//line templates/base.qtpl:53
	qb422016 := qt422016.AcquireByteBuffer()
	//line templates/base.qtpl:53
	WriteBody(qb422016, name)
	//line templates/base.qtpl:53
	qs422016 := string(qb422016.B)
	//line templates/base.qtpl:53
	qt422016.ReleaseByteBuffer(qb422016)
	//line templates/base.qtpl:53
	return qs422016
//line templates/base.qtpl:53
}

//line templates/base.qtpl:55
func StreamTodo(qw422016 *qt422016.Writer, items []*Item) {
	//line templates/base.qtpl:55
	qw422016.N().S(`
<ul id="todo">
  `)
	//line templates/base.qtpl:57
	for _, item := range items {
		//line templates/base.qtpl:57
		qw422016.N().S(`
    <li><input type="checkbox" id="`)
		//line templates/base.qtpl:58
		qw422016.E().S(item.ID)
		//line templates/base.qtpl:58
		qw422016.N().S(`"`)
		//line templates/base.qtpl:58
		if item.Done {
			//line templates/base.qtpl:58
			qw422016.N().S(` checked="checked"`)
			//line templates/base.qtpl:58
		}
		//line templates/base.qtpl:58
		qw422016.N().S(`>`)
		//line templates/base.qtpl:58
		qw422016.E().S(item.Content)
		//line templates/base.qtpl:58
		qw422016.N().S(`</input></li>
  `)
		//line templates/base.qtpl:59
	}
	//line templates/base.qtpl:59
	qw422016.N().S(`
</ul>
`)
//line templates/base.qtpl:61
}

//line templates/base.qtpl:61
func WriteTodo(qq422016 qtio422016.Writer, items []*Item) {
	//line templates/base.qtpl:61
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line templates/base.qtpl:61
	StreamTodo(qw422016, items)
	//line templates/base.qtpl:61
	qt422016.ReleaseWriter(qw422016)
//line templates/base.qtpl:61
}

//line templates/base.qtpl:61
func Todo(items []*Item) string {
	//line templates/base.qtpl:61
	qb422016 := qt422016.AcquireByteBuffer()
	//line templates/base.qtpl:61
	WriteTodo(qb422016, items)
	//line templates/base.qtpl:61
	qs422016 := string(qb422016.B)
	//line templates/base.qtpl:61
	qt422016.ReleaseByteBuffer(qb422016)
	//line templates/base.qtpl:61
	return qs422016
//line templates/base.qtpl:61
}
